/*!
 * Print button for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 */
(function(factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD
        define(['jquery', 'datatables.net', 'datatables.net-buttons'], function($) {
            return factory($, window, document);
        });
    } else if (typeof exports === 'object') {
        // CommonJS
        const jq = require('jquery');
        const loadDeps = function(window, $) {
            if (!$.fn.dataTable) require('datatables.net')(window, $);
            if (!$.fn.dataTable.Buttons) require('datatables.net-buttons')(window, $);
        };

        if (typeof window === 'undefined') {
            module.exports = function(window, $) {
                window = window || global;
                $ = $ || jq(window);
                loadDeps(window, $);
                return factory($, window, window.document);
            };
        } else {
            loadDeps(window, jq);
            module.exports = factory(jq, window, window.document);
        }
    } else {
        // Browser global
        factory(jQuery, window, document);
    }
}(function($, window, document, undefined) {
    'use strict';

    var DataTable = $.fn.dataTable;
    var anchor = document.createElement('a');

    function getAbsoluteUrl(href) {
        anchor.href = href;

        if (anchor.host.indexOf('/') === -1 && anchor.pathname.indexOf('/') !== 0) {
            anchor.host += '/';
        }

        return anchor.protocol + '//' + anchor.host + anchor.pathname + anchor.search;
    }

    function renderRow(data, tag, classes) {
        var row = '<tr>';
        for (var i = 0; i < data.length; i++) {
            var val = data[i] === null || data[i] === undefined ? '' : data[i];
            var classAttr = classes[i] ? ` class="${classes[i]}"` : '';
            row += `<${tag}${classAttr}>${val}</${tag}>`;
        }
        row += '</tr>';
        return row;
    }

    DataTable.ext.buttons.print = {
        className: 'buttons-print',
        text: function(dt) {
            return dt.i18n('buttons.print', 'Print');
        },
        action: function(e, dt, button, config) {
            var exportData = dt.buttons.exportData($.extend({ decodeEntities: false }, config.exportOptions));
            var exportInfo = dt.buttons.exportInfo(config);

            var columnClasses = dt.columns(config.exportOptions.columns)
                .flatten()
                .map(function(colIdx) {
                    return dt.settings()[0].aoColumns[dt.column(colIdx).index()].sClass;
                }).toArray();

            var html = `<table class="${dt.table().node().className}">`;

            if (config.header) {
                html += `<thead>${renderRow(exportData.header, 'th', columnClasses)}</thead>`;
            }

            html += '<tbody>';
            for (var i = 0; i < exportData.body.length; i++) {
                html += renderRow(exportData.body[i], 'td', columnClasses);
            }
            html += '</tbody>';

            if (config.footer && exportData.footer) {
                html += `<tfoot>${renderRow(exportData.footer, 'th', columnClasses)}</tfoot>`;
            }

            html += '</table>';

            var win = window.open('', '');

            if (win) {
                win.document.close();

                // Construct document head with styles
                var head = `<title>${exportInfo.title}</title>`;
                $('style, link').each(function() {
                    var el = $(this).clone()[0];
                    if (el.nodeName.toLowerCase() === 'link') {
                        el.href = getAbsoluteUrl(el.href);
                    }
                    head += el.outerHTML;
                });

                try {
                    win.document.head.innerHTML = head;
                } catch (err) {
                    $(win.document.head).html(head);
                }

                // Construct body content
                win.document.body.innerHTML = `
                    <h1>${exportInfo.title}</h1>
                    <div>${exportInfo.messageTop || ''}</div>
                    ${html}
                    <div>${exportInfo.messageBottom || ''}</div>
                `;

                $(win.document.body).addClass('dt-print-view');

                $('img', win.document.body).each(function() {
                    this.setAttribute('src', getAbsoluteUrl(this.getAttribute('src')));
                });

                if (config.customize) {
                    config.customize(win, config, dt);
                }

                var doPrint = function() {
                    if (config.autoPrint) {
                        win.print();
                        win.close();
                    }
                };

                if (navigator.userAgent.match(/Trident\/\d.\d/)) {
                    doPrint();
                } else {
                    win.setTimeout(doPrint, 1000);
                }
            } else {
                dt.buttons.info(
                    dt.i18n('buttons.printErrorTitle', 'Unable to open print view'),
                    dt.i18n('buttons.printErrorMsg', 'Please allow popups in your browser for this site to be able to view the print view.'),
                    5000
                );
            }
        },
        title: '*',
        messageTop: '*',
        messageBottom: '*',
        exportOptions: {},
        header: true,
        footer: false,
        autoPrint: true,
        customize: null
    };

    return DataTable;
}));


